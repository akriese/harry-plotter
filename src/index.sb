# %% [markdown]
# Harry Plotter - First Design Sprint
# %% [javascript]
const response = await fetch("https://raw.githubusercontent.com/akriese/harry-plotter/main/data/data.json")
var data = await response.json();
console.log(data)
# %% [javascript]
chart = BubbleMap(visitors, {
  value: ([vsitors]) => +visitors,
  position([, districtid, locationid]) {
    const county = countymap.get(stateid + countyid);
    return county && centroid(county);
  },
  title([population, stateid, countyid]) {
    const state = statemap.get(stateid);
    const county = countymap.get(stateid + countyid);
    return `${county?.properties.name}, ${state?.properties.name}\n${(+population).toLocaleString("en")}`;
  },
  features: nation,
  borders: statemesh,
  width: 975,
  height: 610,
  fill: color
})


chart = {
	const svg = d3.create("svg").attr("viewBox", [0, 0, width, height]);
	
	const circle = svg.append("g")
      .attr("stroke", "black")
      .selectAll("circle")
      .data(dataAt(1800), d => d.name)
      .join("circle")
      .sort((a, b) => d3.descending(a.population, b.population))
      .attr("cx", d => x(d.income))
      .attr("cy", d => y(d.lifeExpectancy))
      .attr("r", d => radius(d.population))
      .attr("fill", d => color(d.region))
      .call(circle => circle.append("title")
      .text(d => [d.name, d.region].join("\n")));
}

const response = await fetch("https://raw.githubusercontent.com/akriese/harry-plotter/main/data/data.json")
var visitors = await response.json();
console.log(data)

function InsertYearJsonStructure(data){
  var new_data = [];
  for (i in data){
    if(new_data[data[i]["Institution"]] === undefined){
          var object = CreateObject(data, i);
      	  new_data.push(object);
    }
    else{
      AddYearVisitors(data, i, new_data, counter);
    }
  }
  return new_data;
}

function CreateObject(data, i){
  var key = data[i]["Institution"];
  var object_dict = {
    data[i]["Institution"]: 
    {
        institution: data[i]["Institution"],
        visitors: [data[i].Jahr, data[i]["Besuche insgesamt"]],
      	category: data[i]["Kategorie"]
      }
   };
  return object_dict;
}

function AddYearVisitors(data, i, new_data, counter) {
    new_data[data[i]["Institution"]].visitors.push([data[i].Jahr, data[i]["Besuche insgesamt"]]);
}

new_data = InsertYearJsonStructure(data);
console.log(new_data)
